name: CI
on:
  push: { branches: [ main, dev ] }
  pull_request: { branches: [ main, dev ] }
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect project type
        id: detect
        run: |
          if [ -f package.json ]; then echo "type=node" >> $GITHUB_OUTPUT; fi
          if [ -f requirements.txt ] || { [ -d src ] && ls **/*.py >/dev/null 2>&1; }; then echo "python=true" >> $GITHUB_OUTPUT; fi
      - uses: actions/setup-node@v4
        if: contains(steps.detect.outputs.type, 'node')
        with: { node-version: 'lts/*', cache: 'npm' }
      - run: npm ci || npm install
        if: contains(steps.detect.outputs.type, 'node')
      - run: if npm run | grep -q lint; then npm run lint; else echo 'No lint'; fi
        if: contains(steps.detect.outputs.type, 'node')
      - run: if npm run | grep -q test; then npm test --if-present; else echo 'No test'; fi
        if: contains(steps.detect.outputs.type, 'node')
      - run: if npm run | grep -q build; then npm run build; else echo 'No build'; fi
        if: contains(steps.detect.outputs.type, 'node')
      - uses: actions/setup-python@v5
        if: steps.detect.outputs.python == 'true'
        with: { python-version: '3.x', cache: 'pip' }
      - run: python -m pip install --upgrade pip && if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if: steps.detect.outputs.python == 'true'
      - run: if python -c "import pytest" 2>/dev/null; then pytest -q || true; else echo "pytest not installed"; fi
        if: steps.detect.outputs.python == 'true'
