You are a Replit DevOps agent working in the SmartFlowSite repo. Goal: make /health and /api/boost work on the Express server at port 5000 and ensure CI is green on branch release/v0.2.

DO THIS EXACTLY:

1) Git/branch
- Ensure we are on branch release/v0.2 (create if missing).

2) Express endpoints (CREATE/OVERWRITE files)
- [OVERWRITE] server/routes/boost.ts with:
  ---
  import { Router } from "express";
  const r = Router();
  r.get("/health", (_req, res) => res.status(200).json({ ok: true, ts: Date.now() }));
  r.options("/api/boost", (_req, res) => { res.setHeader("Access-Control-Allow-Origin","*"); res.status(200).end(); });
  r.get("/api/boost", (_req, res) => { res.setHeader("Access-Control-Allow-Origin","*"); res.status(200).json({ ok:true, ts: Date.now(), count: 1 }); });
  export default r;
  ---
- Edit server/index.ts:
  - Add:  import boost from "./routes/boost";
  - Add:  app.use(boost);   (near the end)
  - Confirm server listens on port 5000.

3) CI workflow (CREATE/OVERWRITE)
- [OVERWRITE] .github/workflows/sfs-ci-deploy.yml with:
  ---
  name: sfs-ci-deploy
  on:
    push: { branches: ['**'] }
    pull_request:
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with: { node-version: '20' }
        - run: npm ci || pnpm i --frozen-lockfile || yarn install --frozen-lockfile
        - run: npm run -s build || echo "no build script; skipping"
  # TODO: switch to reusable workflow later
  ---

4) Run & test locally
- Start the dev server (npm run dev) and wait until it logs “Express server running on 5000”.
- In a shell, run:
  curl -i http://localhost:5000/health
  curl -i http://localhost:5000/api/boost
- Verify 200 responses and header “Access-Control-Allow-Origin: *” on /api/boost.

5) Commit & push
- Commit changed files with message: "v0.2: Express /health + /api/boost (CORS), CI workflow"
- Push branch release/v0.2 to origin.

6) Report back (single summary):
- Show git diff summary, the two curl outputs (status lines + headers + body), and the GitHub Actions run URL.
ACCEPTANCE CRITERIA: Both endpoints return 200; /api/boost includes CORS “*”; CI build succeeds on GitHub.
